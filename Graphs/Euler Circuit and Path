//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
public:
    void dfs(int start,vector<int>adj[],vector<bool>&vis)
    {
        vis[start]=true;
        for(auto x:adj[start])
        {
            if(!vis[x])
            {
                dfs(x,adj,vis);
            }
        }
    }
	int isEulerCircuit(int V, vector<int>adj[]){
	  int start=-1;
	  for(int i=0;i<V;i++)
	  {
	      if(adj[i].size()>0)
	      {
	      start=i;
	      break;
	      }
	  }
	  vector<bool>vis(V,false);
	  dfs(start,adj,vis);
	  for(int i=0;i<V;i++)
	  {
	      if(vis[i]==false && adj[i].size()>0)
	      return 0;
	  }
	  int odd_count=0;
	  for(int i=0;i<V;i++)
	  {
	      if(adj[i].size()%2!=0)
	      odd_count++;
	  }
	  if(odd_count==0)
	  return 2;
	  if(odd_count==2)
	  return 1;
	  return 0;
	  // Code here
	}
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int V, E;
		cin >> V >> E;
		vector<int>adj[V];
		for(int i = 0; i < E; i++){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		Solution obj;
		int ans = obj.isEulerCircuit(V, adj);
		cout << ans <<"\n";	}
	return 0;
}
// } Driver Code Ends
